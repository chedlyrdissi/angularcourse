routes

in app module

const appRoutes: Routes = [
  { path: '' //link , component: //page_component },
];

@NgModule({
  declarations: [
  ],
  imports: [
    RouterModule.forRoot(appRoutes)
  ],

  in template 

  <a routerLink="/path">text</a> 
or [routerLink]="['/path'] // for more complex routes
  //for the component that triggers a rerouting

 <router-outlet></router-outlet> where the components defined in routing will be placed

 paths:
 	/servers  // absolute path ==> localhost:4200/servers
 	servers // relative path ==> exp: localhost:4200/servers/servers
 	./servers // relative path too
 	../servers // goes back one step then adds the path

 	<ul class="nav nav-tabs">
        <li role="presentation" routerLinkActive="active" [routerLinkActiveOptions]="{ exact: true }"><a routerLink="/">Home</a></li>
        <li role="presentation" routerLinkActive="active"><a routerLink="/servers">Servers</a></li>
        <li role="presentation" routerLinkActive="active"><a [routerLink]="['/users']">Users</a></li>
    </ul>

this.router.navigate(['servers'], { relativeTo:  //by default root  } );// navigate doesn't know on which route we are.

private actRoute: ActivatedRoute // current route being injected

  { path: 'users/:id', component: UserComponent } // : means it's a variable

  this.route.snapshot.params['param'] // returns the param passed, works just once, by default angular doesn't reinstanciate the ActivatedRouter

this.route.params.subscribe( () => {} ) will be called everytime the params change

you can implement onDestroy and unsubscribe

